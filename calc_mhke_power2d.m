function [pow] = calc_mhke_power2d(fname)

%close all; clear all;
%fname = '../run/outwh01/wh01_0001.nc'; 
% compute the power generated by a turbine installation 
% the subgrid-scale parameterization

fprintf('recomputing power from output file %s\n',fname);

% read bathymetry
h = ncread(fname,'h');
tri = ncread(fname,'nv');

% read time
time = ncread(fname,'time'); time = time-time(1);
nframes = numel(time);

%
dens   = 1025;

% determine which elements are active
flag = ncread(fname,'MHKE_FLAG',[1 1],[Inf 1]);
turb_elems = find(flag > 0); 
nturb_elems = numel(turb_elems);
%fprintf('# of turbine elements %d\n',nturb_elems);

%
xc = ncread(fname,'xc');
yc = ncread(fname,'yc');
pow.nturb = nturb_elems;
pow.x = xc(turb_elems);
pow.y = yc(turb_elems);

%allocate variables
pow.tpower = zeros(nframes,1);
pow.pow = zeros(nframes,nturb_elems);
pow.fx = zeros(nframes,nturb_elems);
pow.fy = zeros(nframes,nturb_elems);
pow.ua = zeros(nframes,nturb_elems);
pow.va = zeros(nframes,nturb_elems);

%loop calculation
h = waitbar(0,'Processing');
for f=1:nframes    
  %fprintf('processing frame %d\n',f);
  waitbar(f/nframes,h)
  for i=1:nturb_elems
     e = turb_elems(i);
     mhke_x = ncread(fname,'MHKE_FX2D',[e,f],[1,1]); 
     mhke_y = ncread(fname,'MHKE_FY2D',[e,f],[1,1]); 
     u      = ncread(fname,'ua',[e,f],[1,1]);
     v      = ncread(fname,'va',[e,f],[1,1]);
     pow.tpower(f) = pow.tpower(f) + dens*sqrt(mhke_x^2 + mhke_y^2)*sqrt(u.^2 + v.^2);
     pow.pow(f,i) = dens*sqrt(mhke_x^2 + mhke_y^2)*sqrt(u.^2 + v.^2);
     pow.fx(f,i) = mhke_x;
     pow.fy(f,i) = mhke_y;
     pow.ua(f,i) = u; 
     pow.va(f,i) = v;
     
  end;
end;
close all;
pow.time = time;
chrstr = {'r--','b--','g--','m--','c--','k--'};
for i=1:nturb_elems
  
  plot(time,pow.pow(:,i)/1e3,char(chrstr(i))); hold on;
end;
plot(time,pow.tpower/1e3,'k');
xlabel('Time (days)','FontSize',18);
ylabel('Power (kW)','FontSize',18);

